{"version":3,"sources":["Food.js","App.js","reportWebVitals.js","index.js","food.module.css"],"names":["Food","title","ingredients","image","source","className","style","recipe","map","ingredient","text","href","target","rel","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipe","a","fetch","api_call","json","results","hits","console","log","class","onSubmit","e","preventDefault","type","placeholder","value","onChange","food","label","url","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQAoBeA,EAjBF,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,OACtC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IACL,+BAAI,4BAAG,8CACFC,EAAYM,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,aAGxB,mBAAGC,KAAQP,EAAQQ,OAAS,SAASC,IAAM,sBAA3C,iBAGA,qBAAKR,UAAWC,IAAMH,MAAOW,IAAKX,EAAOY,IAAI,SC6C1CC,G,MAxDH,WACV,IADgB,EAKcC,mBAAS,IALvB,mBAKTC,EALS,KAKAC,EALA,OAMYF,mBAAS,IANrB,mBAMTG,EANS,KAMDC,EANC,OAOUJ,mBAAS,IAPnB,mBAOTK,EAPS,KAOFC,EAPE,KAShBC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAS,uCAAG,8BAAAC,EAAA,sEAGOC,MAAM,mCAAD,OAAoCL,EAApC,mBAff,WAee,oBAdd,qCAWE,cAGVM,EAHU,gBAOMA,EAASC,OAPf,OAOVC,EAPU,OAUhBX,EAAWW,EAAQC,MACnBC,QAAQC,IAAIH,EAAQC,MAXJ,2CAAH,qDAwBb,OACE,sBAAK1B,UAAU,MAAf,UACE,qBAAK6B,MAAM,SAASpB,IAAI,aAAaC,IAAM,KAE3C,uBAAMoB,SAbM,SAAAC,GAChBA,EAAEC,iBACFd,EAASH,GACTC,EAAU,KAUuBhB,UAAU,cAAvC,UACE,uBAAOA,UAAU,aAAaiC,KAAK,OAAOC,YAAY,kCAAkCC,MAASpB,EAAQqB,SAR5F,SAAAL,GACnBf,EAAUe,EAAExB,OAAO4B,UAQb,wBAAQnC,UAAU,gBAAgBiC,KAAK,SAAvC,uBAEF,wBAAQjC,UAAU,eAGjBa,EAAQV,KAAI,SAAAkC,GAAI,OACf,cAAC,EAAD,CAAMzC,MAASyC,EAAKnC,OAAOoC,MAAOxC,MAASuC,EAAKnC,OAAOJ,MAAOD,YAAewC,EAAKnC,OAAOL,YAAaE,OAAUsC,EAAKnC,OAAOqC,cCzCvHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,qBAAqB,MAAQ,uB","file":"static/js/main.d9c41c94.chunk.js","sourcesContent":["import React from \"react\";\nimport style from './food.module.css';\n\nconst Food = ({title, ingredients, image, source}) => {\n    return(\n        <div className={style.recipe}>\n            <h1>{title}</h1>\n            <o1><b><u>Ingredients</u></b>\n                {ingredients.map(ingredient => (\n                    <li>{ingredient.text}</li>\n                ))}\n            </o1>\n            <a href = {source} target = \"_blank\" rel = \"noopener noreferrer\">\n                URL \n            </a>\n            <img className={style.image} src={image} alt=\"\"/>\n        </div>\n    );\n}\n\nexport default Food;\n","import React, { useEffect, useState} from \"react\";\nimport Food from \"./Food\"\nimport './App.css';\n\nconst App = () => {\n  const API_ID = \"1d2d9dca\"\n  const API_KEY = \"af7a6021e072d1ac2b7463b132cf1efa\";\n  // const API_KEY = \"97ca8d43e4a249c08d36675136e074c0\"\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(``)\n\n  useEffect(() => {\n    getRecipe();\n  }, [query]); //eslint-disable-line \n\n  const getRecipe = async () => {\n    // const recipeName = e.target.elements.recipeName.value;\n    // e.preventDefault();\n    const api_call = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${API_ID}&app_key=${API_KEY}`);\n    // const api_call = await fetch(`https://api.spoonacular.com/recipes/search?apiKey=${API_KEY}&number=1&query=${query}`);\n    // console.log(recipeName)\n\n    const results = await api_call.json();\n    // this.setState({ recipes: results.recipes })\n    // console.log(this.state.recipes)\n    setRecipes(results.hits);\n    console.log(results.hits);\n    \n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  }\n\n  const searchUpdate = e => {\n    setSearch(e.target.value)\n  }\n    return (\n      <div className=\"App\">\n        <img class=\"banner\" src=\"./logo.png\" alt = \"\"/>\n        {/* <h1 className=\"App-title\">Welcome to Recipe Roulette!</h1> */}\n        <form onSubmit = {getSearch} className=\"search-form\">\n          <input className=\"search-bar\" type=\"text\" placeholder=\"Type in your ingredient here...\" value = {search} onChange ={searchUpdate}/>\n          <button className=\"search-button\" type=\"submit\">Search</button>\n        </form>\n        <header className=\"App-header\">\n        \n        </header>\n        {recipes.map(food => (\n          <Food title = {food.recipe.label} image = {food.recipe.image} ingredients = {food.recipe.ingredients} source = {food.recipe.url}/>\n          // <Food title = {Food.recipe.label} totalTime = {Food.recipe.totalTime} image = {Food.recipe.image} />\n        ))}\n      </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","  import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"food_recipe__27OoZ\",\"image\":\"food_image__3rvT6\"};"],"sourceRoot":""}